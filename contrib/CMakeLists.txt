get_filename_component (_current_dir_name "${CMAKE_CURRENT_LIST_DIR}" NAME)
if (CMAKE_FOLDER)
    set (CMAKE_FOLDER "$CMAKE_FOLDER/${_current_dir_name}")
else ()
    set (CMAKE_FOLDER "${_current_dir_name}")
endif ()
unset (_current_dir_name)

if (CLICKHOUSE_ODBC_TEST)
    set (BUILD_GMOCK ON CACHE BOOL "")
    set (INSTALL_GTEST OFF CACHE BOOL "")

    add_subdirectory (googletest)

    mark_as_advanced(BUILD_GMOCK)
    mark_as_advanced(INSTALL_GTEST)

    set_target_properties(gtest PROPERTIES INTERPROCEDURAL_OPTIMIZATION OFF)
    set_target_properties(gtest_main PROPERTIES INTERPROCEDURAL_OPTIMIZATION OFF)
    set_target_properties(gmock PROPERTIES INTERPROCEDURAL_OPTIMIZATION OFF)
    set_target_properties(gmock_main PROPERTIES INTERPROCEDURAL_OPTIMIZATION OFF)

    if (USE_INTERNAL_NANOODBC_LIBRARY)
        set (NANODBC_DISABLE_EXAMPLES 1 CACHE INTERNAL "")
        set (NANODBC_DISABLE_LIBCXX 1 CACHE INTERNAL "")
        set (NANODBC_DISABLE_TESTS 1 CACHE INTERNAL "")
        set (NANODBC_DISABLE_INSTALL 1 CACHE INTERNAL "")
        set (NANODBC_ENABLE_UNICODE 0 CACHE INTERNAL "")
        add_subdirectory (nanodbc)
        set_target_properties(${NANOODBC_LIBRARY} PROPERTIES INTERFACE_LINK_LIBRARIES ODBC::App)
    endif ()
endif ()

if (USE_INTERNAL_SSL_LIBRARY)
    set (BUILD_SHARED 0)
    set (USE_SHARED 0)
    if (XCODE)
        set (ENABLE_ASM 0 CACHE INTERNAL "")
    endif ()
    add_subdirectory (ssl)
endif ()

if (USE_INTERNAL_POCO_LIBRARY)
    set (POCO_UNBUNDLED_ZLIB 1 CACHE INTERNAL "")
    if (WIN32)
        set (ENABLE_NETSSL_WIN 1 CACHE INTERNAL "")
    endif ()
    add_subdirectory (poco)
    if (OPENSSL_FOUND AND TARGET Crypto)
        # Bug in poco https://github.com/pocoproject/poco/pull/2100 found on macos
        target_include_directories(Crypto PUBLIC $<BUILD_INTERFACE:${OPENSSL_INCLUDE_DIR}>)
    endif ()
    if (USE_INTERNAL_POCO_LIBRARY)
        # Remove pthread from linking poco's Net
        set_property(TARGET Net PROPERTY INTERFACE_LINK_LIBRARIES "")
        set_property(TARGET Foundation PROPERTY INTERFACE_LINK_LIBRARIES "")
    endif ()
    if (TARGET uninstall AND CMAKE_FOLDER)
        set_target_properties(uninstall PROPERTIES FOLDER "${CMAKE_FOLDER}")
    endif ()
endif ()
